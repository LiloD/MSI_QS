-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Carson Wang
Type: Phone
Date: 10/12/2011

1. how to ceate popup windows?
2. how flex call javascript?
3. how javascript call flex?
4. what is calllater function in flex?
5. why do you use blazeds?
6. what is the different between class and interface?
7. what is SOA?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Raphael Huang
Type: Phone
Date: 02/22/2013

1. Which method to call if I want to fire a event in a component?
2. What key word is used if I want to write a class which inheritate his parent class?
3. How to make flex application loading faster when initializing?
4. What artifical must compiled if i want to make a flex library? 
5. How to change the apperance of the ListItem?
6. How to set default parameters of a function in flex?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Jack Zhang
Type: Phone
Date: 04/08/2013

1. How do you use FlexUnit? What part of it you don't like?
2. Flex 4 experience. How skinning in Flex 4?
3. How to debug? Describe the process.
4. mx_internal
5. What customized UI component you have created? Technical details
6. What tool you used for performance test and coverage test?
7. Have you ever work in Agile? What you like and don't like about Agile?
8. Compare JavaScript and ActionScript, what you like and don't like?
9. What frameworks you used before? Do you prefer using frameworks?
10. Why would you be a good candidate, technically? What can you bring to the team?
11. Read code and find the problem. 

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Mike Ouyang
Type: Phone
Date: 04/23/2013

1. Tell me about your last project? Which technologies you have used in your last project/.
2. How to improve the performance of the system?
3. How to create the immutable class in core java?
4. Code review(connect to JDBC, singleton class)
5. Why you use the multithreading in the system?
6. Give me some example of the spring annotation.
7. Do you have experience on HTML, JavaScript, JavaSwing?
8. What questions do you have to ask us?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Zack Chen
Type: Phone
Date: 07/24/2013

1. Tell me about Paychex.
2. Describe yourself
3. Type eraser in Generics 
4. Cursor in database
5. What is marker interface
6. Difference between wait() and sleep().
7. Write singleton class. Thread-safe issue in singleton.
8. Phantom read in JDBC.
9. Rest and Web service.


-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Adam Hu
Type: Phone
Date: 09/03/2013

General
1. Tell me about Paychex.
2. Describe yourself
3. Do you have any questions?  The job is 80% java + 20% sql
4. Rate your skills:  Java, SQL, Communication
Java
1. Generics in Java
2. Type eraser in Generics 
3. Marker interface
4. wait() vs sleep()
5. ConcurrentHashMap vs HashTable
SQL
1. Experience in Database design
2. Execution plan
3. Optimize query
4. Cursor
UML
1. Aggregation vs composition
2. Sequence Diagram
3. Bridge design pattern

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: David Ho
Type: Phone
Date: 01/13/2014

General information
1. Tell me about Paychex
2. Rate your skill and technology and communication skill you know by a number
3. 2 words to describe yourself? (Mine : confident, challenge-pursuer)
Java[Update]
1. Write singleton class.
2. How to prevent singleton from created by reflection?
3. JUnit : How do you test private method ? protected method ? 
   (use reflection : method.getdeclaredmethod(), method.setAccessible(true), method.invoke)
4. Generic and type erasure
5. Different between heap and stack
   (I don’t know what he means, so I give example in:
    Heap datastructure(min-sort, max-sort) and Stack datastructre(LIFO queue)
6. Obj allocation : obj created on heap , referenced address on stack
   Obj deallocated in the reverse order of obj allocation
7. Function call : parameter, return address pushed onto the stack; upon return stack is 
   cleared on reverese order
8. Design pattern : he asks me about bridge, adapter, factory patterns
9. Difference between Stringbuffer and Stringbuilder
10. What is marker interface?
11. What is serialversionUID? How do you generate? What the serialversionUID is not the same?
SQL
1. Global Temporary Table (table initialized for variable using define)
2. Execution plan ? What is it that you look at in execution plan?
3. Select * from tableA(2 rows), tableB(3 rows) => how many rows?(6 row = 2Ax3B)
4. Union and Union All
5. Trigger. What is the instead of trigger?
6. View/Materialized view : What is view? How to use view?
Hibernate
1. SessionFactory : is it thread-safe?(it is I think?)
2. Difference between persistence, transient, detach
3. Difference between persist() and save().
4. Difference between load and get? Performance?
Behavior[Update]
1. Imagine you got hired and worked for us in 6 months, then we give you review : positive, 
   negative and constructive opinion about you. What would you see?
2. Which one is more important? Schedule and Quality (My ans: try to achieve the best of both word)
3. When did you have problem? Customer, or Boss or anything? Please elaborate.
4. What value would you add to our team if we hire you? What is it you think we are going to hire you?
5. When your coworker is working hard on the project? What is your response?
  ( I tell my boss to reward him and raise his salary)
6. Are you good at verbal or written skill or both?
Any Question for us?
1. How big is the team?
2. When can I get my feedback? Ususally 24 hours.
3. If I got hired what is my responsibilities?
Advice(My opinion):
1. Always try to be specific. Give example
2. Have somebody with you during the interview
3. Practice fast-reaction because the interview is fast-paced. To defend against that, you can 
   repeat the question in a slowly manner so that the one google the question has time.
4. Always thank the interviewer when the session is ended as well as asking a lot of questions at 
   the end.
5. In my situation, surprisingly using a lot of “happy” helps. In practice, this should be prohibited.

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Timo Huang
Type: Phone
Date: 05/23/2014

1. Talk about last project;
2. Did you use HTML5;
3. Rate your skills;
4. static variable vs non-static variable;
5. Can you have non-static reference in a static method;
6. Map vs HashMap
7. default equals(); what if you only override equals()?
8. ArrayList vs HashMap;
9. final vs finally vs finalize;
10. how to invoke garbage collection programmatically;
11. heap vs stack;
12. interface vs abstract class;
13. Error vs Exception;
14. How to handle exception?
15. StringBuffer vs StringBuilder;
16. Serializable.

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Charlie Yang
Type: Phone
Date: 08/28/2014

Introduction
1. rate your ability: html, javascript, core java
2. talk about your last project
3. do you know agile? advantages? do you like it? why do you like it(or not like it)?
Core Java
1. do you know static keyword?
2. hashmap vs hashtable
3. do you know concurrentHashMap?
4. final vs fianlize vs finally
5. does java allow multiple inheritance?
6. how to handle exceptions? when to use throws and when to use try catch?
7. do you know transient variable?
8. how to get the size of an object in java?
9. have you ever dealt with out of memory error? how to handle it?
10. how do you do unit test?
11. how to test private methods?
12. what do we need to do if we overwrite equals method? (hashCode method)
13. if the hashcodes of two objects are equal, are these two objects equal?
14. abstract class vs interface
15. can an abstract class have constructors?
16. what are the performance of arraylist and linkedlist?
17. if the performance of a sql query is bad, what should we do?
18. Do you know what is execution plan?
19. where clause vs having clause
20. do you know sql injection? how to prevent it?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Jay Zhao
Type: Phone
Date: 09/02/2014

1. explain factory pattern, how many are there? Difference between them? Who created them?
2. UI: why do you Angular JS on the front end?
   Single Page Application, Do you evolve the decision?
3. Use Angular Js, like jQuery or other scripts?
4. How much do you do in Angular JS?
5. Require JS? Other tools?
6. Ant
7. mobile website
8. work style: daily scrum, daily stand-up meeting, 15 min 
9. Unit Testing in JavaScript, how many years do you work? Daily work? Do you write QUnit everyday?
10. UI implementation, what did you write? What problem did you face?
11. Are you in the design team?
12. Other questions?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Rick Wang
Type: Phone
Date: 10/13/2014

1. Tell me about Paychex?
2. Tell us about your project?
3. Rate yourself on different technologies?
4. What you use to do design? Any tools?
5. Sequence diagram  vs. collaboration diagram?
6. 2 words to describe yourself? why those 2 words?
Java:
7. What is singleton design pattern?  How to write singleton class?
8. Explain facade design pattern?
9. How to prevent the reflection creating more than one instance in singleton?
10. Generic in Java? type eraser in Java?
11. Compare "String" "string buffer" "stringbuilder"?
12. SerialversionUID, how to generate?
13. If parent class is serialible, how to make the sub class be not seriable?
Junit: 
14. How to test a method without return?
15. How to test a private method?
16. If a method throws exception, how to test the exception?
SQL:
17. Do you know execution plan, explain it? what the columns mean in execution plan? what cost means?
18. Explain INSTEAD trigger?
19. What's view in sql?
Behavior:
20. Is there any project, you finished and feel disappointed with it?
21. Whether your lead or colleagues be angry with you?
22. What complain do you have about your company, your boss?
23. Have you ever experience being unable to finish your job before the deadline?
24. When you worked in your projects, what problems did you met?
25. Are you good at verbal or written, choose one?
26. If we hired you, after 6 months, what kind of feedback would you get from us? both positive and negative?
27. Do you have any questions?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Rick Wang
Type: Phone
Date: 10/14/2014

1. How do you think about yesterday's interview?
2. How do you think about the questions you were asked?
3. How do you do testing?
4. Are you involved in many QA jobs?
5. How do you solve performance issue?
6. Do you have any questions?

-----------------------------------------------------------------------------------------------------------
Client: Paychex
Candidate: Jay Zhao
Type: Phone
Date: 10/20/2014

1. self-intro
2. what framework did you use for unit testing?
3. soap vs rest
4. how did you do spring security?
5. how to achieve soap?
6. how to configure consume web service?
7. what architecture did you use to handle ajax?
8. how did you use singleton and factory pattern?
9. how the test is done in your previous project?
10. continous integration tool
11. do you prefer front end or back end?
12. do you know solid object oriented design princeples?